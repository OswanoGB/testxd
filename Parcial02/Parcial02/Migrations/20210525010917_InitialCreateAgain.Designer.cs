// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parcial02.Context;

namespace Parcial02.Migrations
{
    [DbContext(typeof(ClinicucaContext))]
    [Migration("20210525010917_InitialCreateAgain")]
    partial class InitialCreateAgain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Parcial02.Entities.Question", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("Parcial02.Entities.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dateAndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("specialityid")
                        .HasColumnType("int");

                    b.Property<string>("usuarioidCard")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("specialityid");

                    b.HasIndex("usuarioidCard");

                    b.ToTable("reservations");
                });

            modelBuilder.Entity("Parcial02.Entities.Specialty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("specialitys")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("specialties");
                });

            modelBuilder.Entity("Parcial02.Entities.Username", b =>
                {
                    b.Property<string>("idCard")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("questionid")
                        .HasColumnType("int");

                    b.HasKey("idCard");

                    b.HasIndex("questionid");

                    b.ToTable("usernames");
                });

            modelBuilder.Entity("Parcial02.Entities.Reservation", b =>
                {
                    b.HasOne("Parcial02.Entities.Specialty", "speciality")
                        .WithMany()
                        .HasForeignKey("specialityid");

                    b.HasOne("Parcial02.Entities.Username", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioidCard");

                    b.Navigation("speciality");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Parcial02.Entities.Username", b =>
                {
                    b.HasOne("Parcial02.Entities.Question", "question")
                        .WithMany()
                        .HasForeignKey("questionid");

                    b.Navigation("question");
                });
#pragma warning restore 612, 618
        }
    }
}
